##################################################################################################
  GO-WARP: a Time Warp simulator written in Go				http://pads.cs.unibo.it
  
  as described in "Time Warp on the Go" http://arxiv.org/abs/1206.2772
  Proc. of 3nd ICST/CREATE-NET Workshop on DIstributed SImulation and Online gaming (DISIO 2012).
  In conjunction with SIMUTools 2012. Desenzano, Italy, March 2012. ISBN: 978-1-936968-47-3

  Copyright 2014, Gabriele D'Angelo, Moreno Marzolla, Pietro Ansaloni
  Computer Science Department, University of Bologna, Italy
  
##################################################################################################

  This tree contains:
    -	a Go-based implementation of the Time Warp synchronization algorithm for Parallel And
	Distributed Simulation (PADS),
    -	a Go-based implementation of the PHOLD synthetic benchmark for optimistic simulation.
    
  More information can be found in the paper "Time Warp on the Go" http://arxiv.org/abs/1206.2772
  and on the project website: http://pads.cs.unibo.it
    
##################################################################################################

  >>>>>>>>>>>>>>> WARNINGS
  
  1) The provided source code is alpha quality with insufficient comments
	and documentation.
  
  2) The Go language version used for developing GO-WARP is the 2010-07-14.

  >>>>>>>>>>>>>>> USAGE

  0) Install the appropriate Go compiler and set the related environment variables.
  
  1) Compile GO-WARP using "make".

  2) If all has gone OK then you can use the "test-scalability.sh" and "test-main.sh" 
	scripts for running the PHOLD benchmark in different configurations.

  >>>>>>>>>>>>>>> ACKNOWLEDGMENTS
  
  All this would have not been possible without the (hard) work of Pietro Ansaloni,
  that is the original author of this source code.
  His BSc thesis (in Italian) can be found at:
	http://amslaurea.unibo.it/1594/1/Ansaloni_Pietro_tesi.pdf
  
  >>>>>>>>>>>>>>> FAQs
  
  Q) Do you plan to port GO-WARP to a more recent version of Go (e.g. >= 1)?
  A) We hope so but a lot of work is necessary for this porting.

